<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="3" ignored="0" total="8" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="26661" started-at="2019-07-04T12:38:21Z" finished-at="2019-07-04T12:38:48Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="26661" started-at="2019-07-04T12:38:21Z" finished-at="2019-07-04T12:38:48Z">
      <class name="Tests.LoginTest">
        <test-method status="PASS" signature="InitializingExtenReports()[pri:0, instance:Tests.LoginTest@aecb35a]" name="InitializingExtenReports" is-config="true" duration-ms="96" started-at="2019-07-04T12:38:21Z" finished-at="2019-07-04T12:38:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitializingExtenReports -->
        <test-method status="PASS" signature="OpenBrowser(java.lang.String, java.lang.String)[pri:0, instance:Tests.LoginTest@aecb35a]" name="OpenBrowser" is-config="true" duration-ms="4828" started-at="2019-07-04T12:38:21Z" finished-at="2019-07-04T12:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="6" started-at="2019-07-04T12:38:26Z" finished-at="2019-07-04T12:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyLoginPageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="PASS" signature="verifyLoginPageTitleTest(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="verifyLoginPageTitleTest" duration-ms="5494" started-at="2019-07-04T12:38:26Z" description="verifying login page title test" finished-at="2019-07-04T12:38:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyLoginPageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageTitleTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="3" started-at="2019-07-04T12:38:32Z" finished-at="2019-07-04T12:38:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageTitleTest status=SUCCESS method=LoginTest.verifyLoginPageTitleTest(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="0" started-at="2019-07-04T12:38:32Z" finished-at="2019-07-04T12:38:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyHomePageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="PASS" signature="verifyHomePageTitleTest(java.lang.reflect.Method)[pri:1, instance:Tests.LoginTest@aecb35a]" name="verifyHomePageTitleTest" duration-ms="3058" started-at="2019-07-04T12:38:32Z" description="verifying home page title test" finished-at="2019-07-04T12:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyHomePageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomePageTitleTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="2" started-at="2019-07-04T12:38:35Z" finished-at="2019-07-04T12:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomePageTitleTest status=SUCCESS method=LoginTest.verifyHomePageTitleTest(java.lang.reflect.Method)[pri:1, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="0" started-at="2019-07-04T12:38:35Z" finished-at="2019-07-04T12:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyContactPageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="PASS" signature="verifyContactPageTitleTest(java.lang.reflect.Method)[pri:2, instance:Tests.LoginTest@aecb35a]" name="verifyContactPageTitleTest" duration-ms="10584" started-at="2019-07-04T12:38:35Z" description="verifying contact page title test" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyContactPageTitleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactPageTitleTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="0" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactPageTitleTest status=SUCCESS method=LoginTest.verifyContactPageTitleTest(java.lang.reflect.Method)[pri:2, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="1" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyUserNameTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="PASS" signature="verifyUserNameTest(java.lang.reflect.Method)[pri:3, instance:Tests.LoginTest@aecb35a]" name="verifyUserNameTest" duration-ms="340" started-at="2019-07-04T12:38:46Z" description="verifying username" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyUserNameTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserNameTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="0" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserNameTest status=SUCCESS method=LoginTest.verifyUserNameTest(java.lang.reflect.Method)[pri:3, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="1" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifySearchContactsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="FAIL" signature="verifySearchContactsTest(java.lang.reflect.Method)[pri:4, instance:Tests.LoginTest@aecb35a]" name="verifySearchContactsTest" duration-ms="3" started-at="2019-07-04T12:38:46Z" description="verifying search contacts test" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifySearchContactsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Assert failed due to mismatch of Hello and hello] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Assert failed due to mismatch of Hello and hello] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at Tests.LoginTest.verifySearchContactsTest(LoginTest.java:149)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Tests.TestRunnerClassForAllure.main(TestRunnerClassForAllure.java:19)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchContactsTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="201" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchContactsTest status=FAILURE method=LoginTest.verifySearchContactsTest(java.lang.reflect.Method)[pri:4, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="1" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyImportsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="FAIL" signature="verifyImportsTest(java.lang.reflect.Method)[pri:5, instance:Tests.LoginTest@aecb35a]" name="verifyImportsTest" duration-ms="2" started-at="2019-07-04T12:38:46Z" description="verifying imports function test" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyImportsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Assert failed due to mismatch of Dheeraj and dheeraj] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Assert failed due to mismatch of Dheeraj and dheeraj] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at Tests.LoginTest.verifyImportsTest(LoginTest.java:172)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Tests.TestRunnerClassForAllure.main(TestRunnerClassForAllure.java:19)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyImportsTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="151" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyImportsTest status=FAILURE method=LoginTest.verifyImportsTest(java.lang.reflect.Method)[pri:5, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="1" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyCreateCompanyTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="FAIL" signature="verifyCreateCompanyTest(java.lang.reflect.Method)[pri:6, instance:Tests.LoginTest@aecb35a]" name="verifyCreateCompanyTest" duration-ms="2" started-at="2019-07-04T12:38:46Z" description="verifying create company function test" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyCreateCompanyTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Assert failed due to mismatch of Motor and Motors] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Assert failed due to mismatch of Motor and Motors] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at Tests.LoginTest.verifyCreateCompanyTest(LoginTest.java:194)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Tests.TestRunnerClassForAllure.main(TestRunnerClassForAllure.java:19)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateCompanyTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="163" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateCompanyTest status=FAILURE method=LoginTest.verifyCreateCompanyTest(java.lang.reflect.Method)[pri:6, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="CreateReport(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@aecb35a]" name="CreateReport" is-config="true" duration-ms="0" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyCreateDashboardTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateReport -->
        <test-method status="SKIP" signature="verifyCreateDashboardTest(java.lang.reflect.Method)[pri:7, instance:Tests.LoginTest@aecb35a]" name="verifyCreateDashboardTest" duration-ms="4" started-at="2019-07-04T12:38:46Z" description="verifying create dashboard function test" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.verifyCreateDashboardTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Not ready to test verifyCreateDashboardTest function under this build version 3.4.5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Not ready to test verifyCreateDashboardTest function under this build version 3.4.5
at Tests.LoginTest.verifyCreateDashboardTest(LoginTest.java:220)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at Tests.TestRunnerClassForAllure.main(TestRunnerClassForAllure.java:19)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateDashboardTest -->
        <test-method status="PASS" signature="GetReportResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@aecb35a]" name="GetReportResult" is-config="true" duration-ms="1" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateDashboardTest status=SKIP method=LoginTest.verifyCreateDashboardTest(java.lang.reflect.Method)[pri:7, instance:Tests.LoginTest@aecb35a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetReportResult -->
        <test-method status="PASS" signature="TearDownApplication()[pri:0, instance:Tests.LoginTest@aecb35a]" name="TearDownApplication" is-config="true" duration-ms="1539" started-at="2019-07-04T12:38:46Z" finished-at="2019-07-04T12:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDownApplication -->
        <test-method status="PASS" signature="FlushingExtentReports()[pri:0, instance:Tests.LoginTest@aecb35a]" name="FlushingExtentReports" is-config="true" duration-ms="201" started-at="2019-07-04T12:38:48Z" finished-at="2019-07-04T12:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FlushingExtentReports -->
      </class> <!-- Tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
